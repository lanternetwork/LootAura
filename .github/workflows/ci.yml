name: ci

on:
  pull_request:
    branches: [main]
  push:
    branches: ['**']

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  gate:
    name: gate
    runs-on: ubuntu-latest
    outputs:
      has_pr: ${{ steps.check.outputs.has_pr }}
    steps:
      - name: Check if SHA belongs to an open PR
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({ owner: context.repo.owner, repo: context.repo.repo, state: 'open', head: undefined, per_page: 100 })
            const has = prs.some(pr => pr.head && pr.head.sha === context.sha)
            core.setOutput('has_pr', has ? 'true' : 'false')
  env-presence:
    name: env-presence
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Check required environment variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" ]; then
            echo "❌ NEXT_PUBLIC_SUPABASE_URL is missing"
            exit 1
          fi
          if [ -z "${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" ]; then
            echo "❌ NEXT_PUBLIC_SUPABASE_ANON_KEY is missing"
            exit 1
          fi
          echo "✅ All required environment variables present"

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  typecheck:
    name: typecheck
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run typecheck

  test-unit:
    name: test-unit
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SUPABASE_SCHEMA: ${{ secrets.NEXT_PUBLIC_SUPABASE_SCHEMA || 'public' }}
          NEXT_PUBLIC_DEBUG: 'true'

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results.xml
            coverage/

  test-integration:
    name: test-integration
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm run test -- tests/integration/
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SUPABASE_SCHEMA: ${{ secrets.NEXT_PUBLIC_SUPABASE_SCHEMA || 'public' }}
          NEXT_PUBLIC_DEBUG: 'true'

  build:
    name: build
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SUPABASE_SCHEMA: ${{ secrets.NEXT_PUBLIC_SUPABASE_SCHEMA || 'public' }}
          NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME }}
          NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET: ${{ secrets.NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET }}
          NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            .next/
            dist/

  css-scan:
    name: css-scan
    runs-on: ubuntu-latest
    needs: [gate, build]
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Check CSS tokens
        run: node scripts/check-css-tokens.js

  migration-verify:
    name: migration-verify
    runs-on: ubuntu-latest
    needs: gate
    if: ${{ github.event_name == 'pull_request' || (github.event_name == 'push' && needs.gate.outputs.has_pr == 'false') }}
    if: contains(github.event.head_commit.modified, '**/*.sql') || contains(github.event.head_commit.added, '**/*.sql')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify migration
        run: node scripts/verify-migration.js
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SUPABASE_SCHEMA: ${{ secrets.NEXT_PUBLIC_SUPABASE_SCHEMA || 'public' }}